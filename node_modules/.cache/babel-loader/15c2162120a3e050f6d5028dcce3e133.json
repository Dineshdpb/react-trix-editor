{"ast":null,"code":"var _jsxFileName = \"/Users/pravin/Desktop/dinesh-web/react-trix-editor/src/Obeserver.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Obeserver = function Obeserver(_ref) {\n  _s();\n\n  var editor = _ref.editor;\n  React.useEffect(function () {\n    var observer = new MutationObserver(function (mutations) {\n      debugger;\n      mutations.forEach(function (_ref2) {\n        var type = _ref2.type,\n            target = _ref2.target,\n            attributeName = _ref2.attributeName;\n\n        // If the parent is a figure with an img target\n        if (target.parentNode.tagName === 'FIGURE' && target.nodeName === 'IMG') {\n          if (type === 'attributes') {\n            switch (attributeName) {\n              // If we have attribute width\n              case 'width':\n                // Remove attribute width\n                target.removeAttribute('width'); // Add img-fluid only once\n\n                target.classList.add('img-fluid');\n                break;\n              // If we have attribute height\n\n              case 'height':\n                // Remove attribute height\n                target.removeAttribute('height');\n                break;\n            }\n          } // Render images HTML code\n\n\n          renderHtmlOutput();\n        }\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Obeserver\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Obeserver, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Obeserver;\n\nvar _c;\n\n$RefreshReg$(_c, \"Obeserver\");","map":{"version":3,"sources":["/Users/pravin/Desktop/dinesh-web/react-trix-editor/src/Obeserver.jsx"],"names":["React","Obeserver","editor","useEffect","observer","MutationObserver","mutations","forEach","type","target","attributeName","parentNode","tagName","nodeName","removeAttribute","classList","add","renderHtmlOutput"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAc;AAAA;;AAAA,MAAZC,MAAY,QAAZA,MAAY;AACnCF,EAAAA,KAAK,CAACG,SAAN,CAAgB,YAAI;AAChB,QAAMC,QAAQ,GAAG,IAAIC,gBAAJ,CAAqB,UAAUC,SAAV,EAAqB;AAC7D;AACJA,MAAAA,SAAS,CAACC,OAAV,CAAkB,iBAAqC;AAAA,YAAlCC,IAAkC,SAAlCA,IAAkC;AAAA,YAA5BC,MAA4B,SAA5BA,MAA4B;AAAA,YAApBC,aAAoB,SAApBA,aAAoB;;AAErD;AACA,YAAID,MAAM,CAACE,UAAP,CAAkBC,OAAlB,KAA8B,QAA9B,IACAH,MAAM,CAACI,QAAP,KAAoB,KADxB,EAEA;AACE,cAAIL,IAAI,KAAK,YAAb,EAA2B;AACzB,oBAAOE,aAAP;AAEE;AACA,mBAAK,OAAL;AACE;AACAD,gBAAAA,MAAM,CAACK,eAAP,CAAuB,OAAvB,EAFF,CAGE;;AACAL,gBAAAA,MAAM,CAACM,SAAP,CAAiBC,GAAjB,CAAqB,WAArB;AACA;AAEF;;AACA,mBAAK,QAAL;AACE;AACAP,gBAAAA,MAAM,CAACK,eAAP,CAAuB,QAAvB;AACA;AAdJ;AAgBD,WAlBH,CAoBE;;;AACAG,UAAAA,gBAAgB;AACjB;AAEF,OA7BD;AA8BD,KAhCwB,CAAjB;AAiCH,GAlCD;AAmCF,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAGD,CAvCM;;GAAMhB,S;;KAAAA,S","sourcesContent":["import React from 'react'\n\nexport const Obeserver = ({editor}) => {\n    React.useEffect(()=>{\n        const observer = new MutationObserver(function (mutations) {\n      debugger\n  mutations.forEach(({ type, target, attributeName }) => {\n    \n    // If the parent is a figure with an img target\n    if (target.parentNode.tagName === 'FIGURE' && \n        target.nodeName === 'IMG')\n    {\n      if (type === 'attributes') {\n        switch(attributeName) {\n\n          // If we have attribute width\n          case 'width':\n            // Remove attribute width\n            target.removeAttribute('width');\n            // Add img-fluid only once\n            target.classList.add('img-fluid');\n            break;\n\n          // If we have attribute height\n          case 'height':\n            // Remove attribute height\n            target.removeAttribute('height');\n            break;\n        }\n      }\n\n      // Render images HTML code\n      renderHtmlOutput();\n    }\n\n  });\n});\n    })\n  return (\n    <div>Obeserver</div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}